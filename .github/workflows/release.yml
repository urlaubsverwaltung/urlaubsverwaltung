name: Release

on:
  push:
    tags:
      - 'urlaubsverwaltung*'

jobs:
  release:
    runs-on: ubuntu-20.04
    env:
      MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build jar with Maven
        run: >
          ./mvnw $MAVEN_CLI_OPTS
          -Pcoverage
          clean verify
      - name: Extract release tag
        id: vars
        run: echo "version=${GITHUB_REF#refs/*/urlaubsverwaltung-}" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release Urlaubsverwaltung ${{ steps.vars.outputs.version }}
          body_path: .chglog/${{ steps.vars.outputs.version }}.md
          files: |
            ./target/urlaubsverwaltung-*.jar
          prerelease: true
      - name: Publish docker image to Docker Hub
        run: >
          ./mvnw $MAVEN_CLI_OPTS
          spring-boot:build-image
          -Dspring-boot.build-image.publish=true
          -Ddocker-publish-registry=registry.hub.docker.com
          -Ddocker-publish-registry-path=synyx
          -Ddocker-publish-registry-username=${{ secrets.DOCKER_USERNAME }}
          -Ddocker-publish-registry-password=${{ secrets.DOCKER_PASSWORD }}
      - name: Publish docker image to GitHub Container Registry
        run: >
          ./mvnw $MAVEN_CLI_OPTS
          spring-boot:build-image
          -Dspring-boot.build-image.publish=true
          -Ddocker-publish-registry=ghcr.io
          -Ddocker-publish-registry-path=${{ github.repository }}
          -Ddocker-publish-registry-username=${{ github.actor }}
          -Ddocker-publish-registry-password=${{ secrets.GITHUB_TOKEN }}
