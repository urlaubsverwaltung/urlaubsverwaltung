@layer base {
  :root {
    /* info-banner is optional and value is overridden by javascript with real height on runtime. as we don't know the content yet... */
    --info-banner-height: 0px;
    --top-bar-height: 3.25rem;
    --info-banner-sticky-top: 0;
    --navigation-sticky-top: var(--info-banner-height);
    --content-sticky-top: calc(var(--navigation-sticky-top) + var(--top-bar-height));
  }

  html {
    height: -webkit-fill-available;
  }

  body {
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      "Helvetica Neue",
      Arial,
      "Noto Sans",
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji";
    font-size: 100%;
    margin: 0;
    color: #444444;
    @apply dark:tw-bg-zinc-900;
    @apply dark:tw-text-zinc-200;
    min-height: 100vh;
    min-height: --webkit-fill-available;
    background-image: linear-gradient(#ffffff, #fafafa);
    background-attachment: fixed;
    display: grid;
    grid-template-rows: auto auto 1fr auto;
    grid-template-columns: auto 1fr;
    grid-template-areas:
      "banner banner"
      "navigation topbar"
      "content content"
      "footer footer";
  }

  @screen lg {
    body {
      display: grid;
      grid-template-rows: auto auto 1fr auto;
      grid-template-columns: auto 1fr;
      grid-template-areas:
        "banner banner"
        "navigation topbar"
        "navigation content"
        "navigation footer";
    }
  }

  /*body > [class*="max-w"][class*="mx-auto"] {*/
  /*  !* since width is controlled by the body:flex container we have to define 100% now. *!*/
  /*  !* otherwise `margin: 0 auto` to center something would have a width of 'auto' instead of the maximum available space. *!*/
  /*  width: 100%;*/
  /*}*/

  @font-face {
    font-family: "KaushanScript";
    src:
      local("KaushanScript"),
      local("KaushanScript Regular"),
      local("KaushanScript-Regular"),
      url("/fonts/kaushanscript/KaushanScript-Regular.woff2") format("woff2"),
      url("/fonts/kaushanscript/KaushanScript-Regular.woff") format("woff");
    font-display: swap;
  }
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
  @apply dark:tw-border-neutral-600;
}

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */
html {
  font-family:
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    "Helvetica Neue",
    Arial,
    "Noto Sans",
    sans-serif,
    "Apple Color Emoji",
    "Segoe UI Emoji",
    "Segoe UI Symbol",
    "Noto Color Emoji"; /* 1 */
  /* 2 */
  line-height: 1.5;
  /* override bootstrap 10px font-size */
  /* to match 1rem to the user configured font size */
  font-size: 100%;

  --scroll-padding-top: 5rem;
  scroll-padding-top: var(--scroll-padding-top);
}

hr {
  border-color: #d5d5d5;
  @apply dark:tw-border-zinc-600;
}

h1 {
  @apply tw-text-2xl;
  @apply tw-font-normal;
  @apply tw-leading-6;
}
h2 {
  @apply tw-text-xl;
  @apply tw-font-normal;
  @apply tw-leading-6;
}
h3 {
  @apply tw-text-base;
  @apply tw-font-normal;
  @apply tw-leading-6;
}
h4 {
  @apply tw-text-base;
  @apply tw-font-normal;
  @apply tw-leading-6;
}
h5 {
  @apply tw-text-base;
  @apply tw-font-normal;
  @apply tw-leading-6;
}
h6 {
  @apply tw-text-base;
  @apply tw-font-normal;
  @apply tw-leading-6;
}

label {
  @apply tw-font-semibold;
  @apply tw-text-sm;
  @apply tw-leading-6;
}
